<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>知识点</title>
    <link href="/2023/02/04/network_engineer/"/>
    <url>/2023/02/04/network_engineer/</url>
    
    <content type="html"><![CDATA[<p>1、Cache是在计算机存储系统的层次结构中，介于中央处理器和主存储器之间的高速小容量存储器。它和主存储器一起构成一级的存储器。高速缓冲存储器和主存储器之间信息的调度和传送是由硬件自动进行的，所以其读写速度最快。内存速度次之，硬盘是有机械装置的存储方式，比较慢，光盘最慢。</p><p>2、直接内存访问（DMA，Direct Memory Access）是一些计算机总线架构提供的功能，它能使数据从附加设备（如磁盘驱动器）直接发送到计算机主板的内存上。<br>DMA无法控制硬盘到光盘的传输，可以控制 内存到外存的传输、硬盘到光盘的传输、内存到I/O接口的传输、I/O接口到内存的传输</p><p>3、PCI采用的是 并行总线<br>PCI是Peripheral Component Interconnect(外设部件互连标准)的缩写，它是个人电脑中使用最为广泛的接口，是并行通信方式。</p><p>USB是是英文Universal Serial Bus（通用串行总线）的缩写，是一个外部总线标准。<br>UART(Universal Asynchronous Receiver/Transmitter)通用异步接收/发送装置，是一个并行输入成为串行输出的芯片。<br>L2C总线由数据线SDA和时钟线SCL两条线构成通信线路，是串行通信方式。</p><p>4、进程与线程的区别总结：</p><p>本质区别：进程是操作系统资源分配的基本单位，而线程是处理器任务调度和执行的基本单位。</p><p>包含关系：一个进程至少有一个线程，线程是进程的一部分，所以线程也被称为轻权进程或者轻量级进程。</p><p>资源开销：每个进程都有独立的地址空间，进程之间的切换会有较大的开销；线程可以看做轻量级的进程，同一个进程内的线程共享进程的地址空间，每个线程都有自己独立的运行栈和程序计数器，线程之间切换的开销小。</p><p>影响关系：一个进程崩溃后，在保护模式下其他进程不会被影响，但是一个线程崩溃可能导致整个进程被操作系统杀掉，所以多进程要比多线程健壮。</p><p>进程（Process）是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是操作系统结构的基础。在早期面向进程设计的计算机结构中，进程是程序的基本执行实体；在当代面向线程设计的计算机结构中，进程是线程的容器。程序是指令、数据及其组织形式的描述，进程是程序的实体</p><p>5、Windows10的内核是NT，Ubuntu14.04的内核是linux 4.0，CentOS7.0的内核是linux3.10.0，中标麒麟6.0的内核是强化的Linux内核。</p><p>6、操作系统内核功能通常包含以下几部分：</p><p>系统调用接口（System call interface）。</p><p>程序管理（Process control）。</p><p>内存管理（Memory management）。</p><p>文件系统管理（FileSystem management）。</p><p>设备驱动（Device driver）。</p><p>但不包括版本管理。</p><p>7、在网络工程项目全流程中，项目测试的测试目标来自于 需求分析 阶段<br>软件工程的基本常识</p><p>8、网络建设完成后需要进行日常维护，维护的内容有 网络设备管理、操作系统维护、网络安全管理</p><p>9、五类、六类网线的标准是由  ISO/IEC JTCISC2S委员会 制定的。</p><p>10、若8进制信号的信号速率是4800Baud，则信道的数据速率为14.4k/s<br>8进制信号的信号速率是4800Baud，由于8进制用3位二进制表示，故信道速率为：<br>4800Baud×3=14400b/s=14.4k/s</p><p>11、属于基带传输的是 PCM编码传输</p><p>PSK编码传输是相移键控传输，不是基带传输。</p><p>PCM编码传输脉冲编码调制，是将模拟信号编程数字信号进行基带传输。</p><p>QAM编码传输是正交幅度调制，不是基带传输。</p><p>SSB传输是指单边带传输，不是基带传输。</p><p>12、依据《数据中心设计规范》，在设计数据中心时，成行排列的机柜，其长度大于6米时，两端应设有通道</p><p>根据规范，成行排列的机柜(架)，其长度大于6m时，两端应设有通道；通道的宽度不宜小于1m，局部可为0.8m。</p><p>13、假设一个10Mb/s的适配器使用曼彻斯特编码向链路发送全为1的比特流，从适配器发出的信号将有 每秒2000万　个跳变</p><p>曼彻斯特编码每秒2次跳变，故10Mb/s的适配器每秒有20M个跳变，即：</p><p>20 000 000个跳变=2000万个跳变。</p><p>14、5G无线通信采用的载波调制技术是 OFDM<br>5G无线通信采用的载波调制技术是OFDM，这是采用正交频分复用技术对多载波的一种调制方法。</p><p>15、安全性较低是口令认证<br>生物认证、多因子认证、U盾认证的安全性均比口令认证高。</p><p>16、Windows平台网络命令Ping和Tracert的实现依赖于IP套接字</p><p>Ping和Tracert的实现都是基于ICMP协议的，依赖于IP套接字。</p><p>17、SONET （Synchronous Optical Network）同步光纤网络。<br>SONET采用的成帧方法是时分复用　<br>SONET采用的成帧方法是时分复用技术，采用125微秒的帧长或帧速率8000Hz的帧速率. 每个帧有9行×90列的八位组或字节，形成的每个帧总共810B。</p><p>18、IEEE802.1la工作在5GHz频率，工作在2.4GHz频率的是ZigBee/IEEE 802.15.4、WiFi（Wireless Fidelity，无线保真技术）即IEEE 802.11协议<br>IEEE 802.11a和IEEE 802.11g标准。其传输速率最高可达54 Mb/s。能够广泛支持数据、图像、语音和多媒体等业务。</p><p>19、一个IP报文经过路由器处理后，若TTL字段值变为0，则路由器会进行的操作是 向IP报文的源地址发送一个出错信息，并丢弃该报文</p><p>20、当IP报文从一个网络转发到另一个网络时 MAC地址改变，但IP地址不变</p><p>IP报文从一个网络转发到另一个网络时，IP地址是不变的，而在链路层是一段链路一段链路转发的，MAC地址会改变。</p><p>21、以下网络控制参数中，不随报文传送到对端实体的是  接收进程</p><p>上层协议、接收缓存大小、拥塞窗口大小等参数都会随报文传送到对端实体。<br>接收进程不会随报文传送。</p><p>22、RIP 路由协议是一种基于 跳数 为度量的路由协议，其中RIPvl使用广播方式来进行路由更新，RIPv2使用组播方式来进行路由更新，其组播地址是224.0.0.9</p><p>RIP 路由协议是一种基于跳数hop为度量的路由协议，RIPv2使用组播方式来进行路由更新，其组播地址是224.0.0.9</p><p>23、25 26 27题需要理解</p><p>24、Telnet协议是一种基于TCP的远程登录协议。</p><p>25、电子支付类网站应使用安全套接层协议（Secure Sockets Layer，SSL）和安全电子交易协议（Secure Electronic Transaction，SET），不使用HTTP协议。</p><p>26、电子邮件客户端通过发起对 SMTP 服务器的 25 端口的TCP连接来进行邮件发送。</p><p>27、以下关于IPv6与Pv4报文头区别比较的说法中，错误的是  IPv6与IPv4中均有“校验和”字段。IPv6中没有“校验和”字段。<br>IPv4的头部是变长的，IPv6的头部是定长的<br>IPv6中的HOP Limit字段作用类似于IPv4中的TTL字段<br>IPv6中的Traffic Class字段作用类似于IPv4中的Tos字段</p><p>28、在DNS服务器中，区域的邮件服务器及其优先级由 MX 资源记录定义<br>MX(Mail eXchanger)定义了区域的邮件服务器及其优先级(搜索顺序)。</p><p>29、安装Liux时必须创建的分区有：/boot分区、swap分区、/根分区。</p><p>30、在Windows中，使用ipconfig/flushdns命令来清除本地DNS缓存。</p><p>ipconfig/displaydns显示DNS解析程序缓存的内容。</p><p>ipconfig /registerdns刷新所有DHCP租用并重新注册DNS名称。</p><p>ipconfig /release释放本机的IP地址。</p><p>31、通过发送DHCPdiscover报文以查找DHCP服务器。</p><p>报文的源MAC地址就是该主机的MAC地址，即00-FF-12-CD-10-22。</p><p>源IP地址此时还不知道，因此为空，即0.0.0.0。</p><p>   36 37 38题</p><p>32、GET请求有长度限制，长度限制是由浏览器和Web服务器决定和设置的。</p><p>GET方法用于向服务器请求页面，该请求可被收藏为标签<br>POST方法用于将数据发送到服务器以创建或者修改数据<br>POST请求不会被保留在浏览器的历史记录中</p><p>33、在Windows平台上，要为某主机手动添加一条ARP地址映射，下面的命令正确的是  arp-s 157.55.85.212 00-aa-00-62-c6-09<br>当需要手动添加或绑定一条arp记录时使用arp -s命令。</p><p>34、信息系统内网IP为10.0.10.2是一个私有地址，必须经过NAT转换，NAT模式应配置为一对一目的NAT，源地址应该配置为任意地址，才能使外部所有用户均可以访问。</p><p>35、x.509数字证书标准推荐使用的密码算法是RSA不对称密钥算法。</p><p>国密SM2数字证书采用的公钥密码算法是ECC基于椭圆曲线数学的公开密钥加密算法。</p><p>36、图中可以看出这是受到了SQL注入攻击，SQL注入式攻击就是在页面请求的查询字符串，欺骗服务器执行恶意的SQL命令。<br>DDos<br>Distributed denial of service attack<br>分布式拒绝服务攻击可以使很多的计算机在同一时间遭受到攻击，使攻击的目标无法正常使用，分布式拒绝服务攻击已经出现了很多次，导致很多的大型网站都出现了无法进行操作的情况，这样不仅仅会影响用户的正常使用，同时造成的经济损失也是非常巨大的。<br>分布式拒绝服务攻击方式在进行攻击的时候，可以对源IP地址进行伪造，这样就使得这种攻击在发生的时候隐蔽性是非常好的，同时要对攻击进行检测也是非常困难的，因此这种攻击方式也成为了非常难以防范的攻击。</p><p>攻击者多个，分布在不同位置</p><p>XSS<br>XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java、 VBScript、ActiveX、 Flash 或者甚至是普通的HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。</p><p>HTTP头攻击<br><a href="https://blog.csdn.net/weixin_51387754/article/details/116481515">https://blog.csdn.net/weixin_51387754/article/details/116481515</a></p><p>37、在SNMP协议中Trap上报是通过UDP协议的 162 端口。<br>通过UDP协议的162端口进行的</p><p>38、在OSPF的广播网络中，有4台路由器Router A、Router B、Router C和Router D，其优先级分别为2、1、1和0，Router ID分别为192.168.1.1、192.168.2.1、192.168.3.1和192.168.4.1。若在此4台路由器上同时启用OSPF协议，OSPF选出的BDR为 Router C　</p><p>开放式最短路径优先（Open Shortest Path First，OSPF）是广泛使用的一种动态路由协议，它属于链路状态路由协议，具有路由变化收敛速度快、无路由环路、支持变长子网掩码（VLSM）和汇总、层次区域划分等优点。在网络中使用OSPF协议后，大部分路由将由OSPF协议自行计算和生成，无须网络管理员人工配置，当网络拓扑发生变化时，协议可以自动计算、更正路由，极大地方便了网络管理。但如果使用时不结合具体网络应用环境，不做好细致的规划，OSPF协议的使用效果会大打折扣，甚至引发故障。<br>OSPF协议是一种链路状态协议。每个路由器负责发现、维护与邻居的关系，并将已知的邻居列表和链路费用LSU(Link State Update)报文描述，通过可靠的泛洪与自治系统AS(Autonomous System)内的其他路由器周期性交互，学习到整个自治系统的网络拓扑结构;并通过自治系统边界的路由器注入其他AS的路由信息，从而得到整个Internet的路由信息。每隔一个特定时间或当链路状态发生变化时，重新生成LSA，路由器通过泛洪机制将新LSA通告出去，以便实现路由的实时更新。</p><p>为减小多路访问网络中OSPF流量，OSPF会选择一个指定路由器（DR）和一个备份指定路由器（BDR），DR/BDR的选举是基于接口的，接口的DR优先级越大越优先，因此OSPF选出的DR为Router A，BDR则在Router B和Router C中选择，由于两个优先级相同，故再比较ID，选择ID大的即Router C为BDR。</p><p>39、在生成快速转发表的过程中，五元组是指 源IP地址、目的IP地址、源端口号、目的端口号、协议号</p><p>40、可以发出SNMP GetRequest的网络实体是 Manager</p><p>41、SNMP报文中不包括 优先级</p><p>42、网络工程师5天修炼  p47<br>1）给定ip地址和掩码，求网络地址、广播地址、子网范围、子网能容纳的最大主机数<br>网络地址：主机位全为0；广播地址：主机位全为1</p><p>子网能容纳的最大主机数 = 2^主机位-2（减2是去除网络地址和广播地址）<br>子网范围 = 子网地址（网络地址） ~ 广播地址<br>子网中某台主机的ip地址 和 子网掩码 以 二进制形式 按位与 得到子网地址（网络地址）</p><p>2）给定现有的网络地址和掩码并给出子网数目，计算子网掩码及子网可分配的主机数<br>划分子网<br>2^N-1 ＜ 划分子网数 &lt;= 2^N，将已知的子网掩码转换成二进制形式，然后网络位+N得到新的 子网掩码</p><p>3）给出网络类型及子网掩码，求划分子网数<br>①根据网络类型，得到网络号是多少位<br>A类地址 0 1.0.0.0 ~ 126.255.255.255  子网位（网络位）8位，主机位24位<br>B类地址 10 128.0.0.0 ~ 191.255.255.255 子网位（网络位）16位，主机位16位<br>C类地址 110 192.0.0.0 ~ 223.255.255.255 子网位（网络位）24位，主机位8位</p><p>D类和E类不分网络地址和主机地址<br>D类地址：1110 224.0.0.0 ~ 239.255.255.255<br>E类地址：11110 240.0.0.0 ~ 247.255.255.255</p><p>②转换子网掩码为建网比特数<br>比如255.255.192.0   /18   18即为建网比特数（从左到右连续1的总数）</p><p>③子网号=建网比特数-该网络的网络号，划分子网个数=2^子网号</p><p>4）使用子网汇聚将给出的多个子网合并为一个超网，求超网地址<br>从左到右找连续的相同位和相同位数</p><p>43、使用display isis brief命令可以查看IS-IS协议的概要信息。</p><p>44、GVRP协议所支持的VLANID范围为1-4094，而VTP协议只支持1-1001号的VLAN。<br>GVRP是GARP的一种应用，由IEEE制定<br>交换机之间的协议报文交互必须在VLAN Trunk链路上进行<br>GVRP配置时需要在每一台交换机上建立VLAN</p><p>45、命令port-isolate enable的含义是同一VLAN下二层隔离。<br>命令 port trunk allow-pass vlan10 to 30的含义是配置接口属于VLAN10-VLAN30。</p><p>46、由IEEE制定的最早的STP标准是IEEE802.1d<br>A.IEEE802.1d</p><p>B.IEEE 802.1q</p><p>C.IEEE 802.1w</p><p>D.IEEE 802.1s</p><p>47、5G网络采用网络切片技术可将5G网络分割成多张虚拟网络。<br>A.网络切片技术　　B.边缘计算技术　　C.网络隔离技术　　D.软件定义网络技术</p><p>48、IEEE802.3z是千兆以太网标准。<br>A.标准以太网　　B.快速以太网　　C.千兆以太网　　D.万兆以太网</p><p>49、WPA2认证方式使用了AES加密算法，安全性更高。<br>A.开放式　　B.WPA　　C.WPA2　　D.WEP</p><p>50、分布式存储方式常使用多副本技术实现数据冗余。<br>A.DAS　　B.NAS　　C.SAN　　D.分布式</p><p>51、结构化布线系统中，实现各楼层设备间子系统互联的是 干线子系统</p><p>52、属于网络安全等级保护第三级且是在上一级基础上增加的安全要求是应对关键设备实施电磁屏蔽。</p><p><a href="https://blog.51cto.com/wuchenwen/5827535">https://blog.51cto.com/wuchenwen/5827535</a></p><p>线程与进程，你真得理解了吗<br><a href="https://blog.csdn.net/mu_wind/article/details/124616643">https://blog.csdn.net/mu_wind/article/details/124616643</a></p>]]></content>
    
    
    <categories>
      
      <category>NetWork forenoon</category>
      
    </categories>
    
    
    <tags>
      
      <tag>总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>int和long转换</title>
    <link href="/2023/01/25/int%E5%92%8Clong%E8%BD%AC%E6%8D%A2/"/>
    <url>/2023/01/25/int%E5%92%8Clong%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<p>  安卓SDK：</p><p>  用户 ID，32 位无符号整数。建议设置范围：1 到 (2^32-1)，并保证唯一性。如果不指定（即设为 0），SDK 会自动分配一个，并在 onJoinChannelSuccess 回调方法中返回，App 需自行维护该返回值，SDK 不对该返回值进行维护。optionalUid 在 SDK 内部用 32 位无符号整数表示，由于 Java 不支持无符号整数，optionalUid 被当成 32 位有符号整数处理，对于过大的整数，Java 会表示为负数，如有需要可以用 (uid&amp;0xffffffffL) 转换成 64 位整数。频道内每个用户的 UID 必须是唯一的。如果想要从不同的设备同时接入同一个频道，请确保每个设备上使用的 UID 是不同的。</p><p>  java int型范围 </p><p>  c++ unsigned int型为无符号32位整数，占4个字节，取值范围在0~4,294,967,295（2^32-1）之间。</p><p>  uid&amp;0xffffffffL 详解<br>  <a href="https://blog.csdn.net/storyfull/article/details/103147478">https://blog.csdn.net/storyfull/article/details/103147478</a></p><p>  00 111 1111 1111 1111 1111 1111 1111 1111    2147483647  2^31-1</p><p>  01 111 1111 1111 1111 1111 1111 1111 1111   -2147483647  0XFFFFFFFF<br>                   二进制&amp;运算<br>  01 000 0000 0000 0000 0000 0000 0000 0000    2147483648  SDK返回的uid超过32位了，通过uid&amp;0xffffffffL转成64位long型</p><p>  01 000 0000 0000 0000 0000 0000 0000 0000    2147483648  </p><p>  public class UserTest {<br>    public static void main(String[] args) throws Exception {<br>        // UserTest.User user1 = new UserTest().new User();</p><pre><code class="hljs">    // UserTest user6 = new UserTest();    // UserTest.User user1 = user6.new User();    User user1 = new User();    user1.age = 10;    // User user2 = new User();    // UserTest.User user2 = new UserTest().new User();    // User user3 = user1;    // System.out.println(user1.age);    // System.out.println(user1);    // System.out.println(user2);    // System.out.println(user3);    // System.out.println(user1 == user2);    // instanceof 判断左边对象是否为其右边类的实例    // user1是对象实例，User是类    // System.out.println(user1 instanceof User);    // System.out.println(&quot;\u0000&quot;.length());    // System.out.println(&quot;&quot;.length());    // char c = 0;    // char d = &#39;\u0000&#39;;    // System.out.println(c == d);    // System.out.println(&quot;c: &quot; + c);    // System.out.println(&quot;d: &quot; + d);    // System.out.println(&quot;e: &quot; + user1.e);    // System.out.println(user1.e == d);    // boolean a = 1 &amp; 0xFFFFFFFFL;    long a = 2147483650L;    long b = a &amp; 0xFFFFFFFFL;    // System.out.println(new Long(a).intValue());    System.out.println(Long.valueOf(a).intValue());    System.out.println(b);    System.out.println(a);&#125;</code></pre><p>}</p><p>class User {<br>    String name;<br>    int age;<br>    char e;</p><p>} </p><p>剑指offer：Python 二进制中1的个数 &amp;0xffffffff是什么意思<br><a href="https://blog.csdn.net/storyfull/article/details/103147478">https://blog.csdn.net/storyfull/article/details/103147478</a></p><p>静态博客框架jekyll、hexo和hugo三者之间的区别与差异<br><a href="https://zhuanlan.zhihu.com/p/368407566">https://zhuanlan.zhihu.com/p/368407566</a></p><p>GitHub Pages + Hexo搭建个人博客网站，史上最全教程<br><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p>Jekyll + Github Pages 搭建个人免费博客<br><a href="https://zhuanlan.zhihu.com/p/87225594">https://zhuanlan.zhihu.com/p/87225594</a></p><p>Jekyll主题<br><a href="https://jekyllrb.com/docs/themes/">https://jekyllrb.com/docs/themes/</a></p><p>hexo官网<br><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>GitHub Pages 快速入门<br><a href="https://docs.github.com/zh/pages/quickstart">https://docs.github.com/zh/pages/quickstart</a></p><p>切换mac默认的ruby版本<br><a href="https://www.jianshu.com/p/f3e4ae8e14a6">https://www.jianshu.com/p/f3e4ae8e14a6</a></p><p>如何在 GitHub 上写博客<br><a href="https://www.zhihu.com/question/20962496">https://www.zhihu.com/question/20962496</a></p><p>Java中32位无符号数的取法<br><a href="https://blog.csdn.net/weixin_39469127/article/details/98526363">https://blog.csdn.net/weixin_39469127/article/details/98526363</a></p><p>【JAVA】Java的boolean 和 int互相转换 ——Java的true、false和1、0之间的相互转化<br><a href="https://blog.51cto.com/u_15049790/4351833">https://blog.51cto.com/u_15049790/4351833</a></p><p>上传github<br><a href="https://git-scm.com/docs/git-credential-cache">https://git-scm.com/docs/git-credential-cache</a></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/25/hello-world/"/>
    <url>/2023/01/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
